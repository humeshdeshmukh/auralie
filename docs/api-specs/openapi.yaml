openapi: 3.0.3
info:
  title: Auralie API
  description: AI-driven menstrual health assistant API
  version: 1.0.0
  contact:
    name: Auralie Team
    email: api@auralie.health

servers:
  - url: http://localhost:8000/api
    description: Development server
  - url: https://api.auralie.health
    description: Production server

security:
  - bearerAuth: []
  - apiKey: []

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid request data
        '409':
          description: User already exists

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials

  /auth/refresh:
    post:
      tags:
        - Authentication
      summary: Refresh access token
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Token refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'

  /users/me:
    get:
      tags:
        - Users
      summary: Get current user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/me:
    put:
      tags:
        - Users
      summary: Update user profile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: Profile updated

  /cycle-logs:
    post:
      tags:
        - Cycle Tracking
      summary: Log a period cycle
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CycleLogRequest'
      responses:
        '201':
          description: Cycle logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CycleLog'

  /cycle-logs:
    get:
      tags:
        - Cycle Tracking
      summary: Get user's cycle logs
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Cycle logs retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCycleLogs'

  /symptoms:
    post:
      tags:
        - Symptom Tracking
      summary: Log daily symptoms
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SymptomLogRequest'
      responses:
        '201':
          description: Symptoms logged successfully

  /symptoms:
    get:
      tags:
        - Symptom Tracking
      summary: Get symptom history
      security:
        - bearerAuth: []
      parameters:
        - name: start_date
          in: query
          schema:
            type: string
            format: date
        - name: end_date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Symptom history retrieved

  /predictions/cycle:
    get:
      tags:
        - Predictions
      summary: Get cycle predictions
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Cycle predictions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CyclePrediction'

  /predictions/fertility:
    get:
      tags:
        - Predictions
      summary: Get fertility predictions
      security:
        - bearerAuth: []
      parameters:
        - name: date
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Fertility predictions

  /articles:
    get:
      tags:
        - Educational Content
      summary: Get educational articles
      parameters:
        - name: category
          in: query
          schema:
            $ref: '#/components/schemas/ArticleCategory'
        - name: age_group
          in: query
          schema:
            $ref: '#/components/schemas/AgeGroup'
        - name: language
          in: query
          schema:
            type: string
            default: en
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Articles retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArticles'

  /articles/{id}:
    get:
      tags:
        - Educational Content
      summary: Get specific article
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Article retrieved

components:
  schemas:
    # Authentication
    RegisterRequest:
      type: object
      required:
        - email
        - password
        - first_name
        - date_of_birth
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
        first_name:
          type: string
          minLength: 1
        date_of_birth:
          type: string
          format: date
        phone:
          type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    AuthResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/User'
            access_token:
              type: string
            refresh_token:
              type: string
        message:
          type: string

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string

    # Users
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        first_name:
          type: string
        date_of_birth:
          type: string
          format: date
        preferences:
          $ref: '#/components/schemas/UserPreferences'
        created_at:
          type: string
          format: date-time

    UserPreferences:
      type: object
      properties:
        theme:
          type: string
          enum: [light, dark, system]
        language:
          type: string
        notifications:
          $ref: '#/components/schemas/NotificationSettings'
        privacy:
          $ref: '#/components/schemas/PrivacySettings'

    NotificationSettings:
      type: object
      properties:
        cycle_reminders:
          type: boolean
        symptom_reminders:
          type: boolean
        educational_content:
          type: boolean
        sound_enabled:
          type: boolean

    PrivacySettings:
      type: object
      properties:
        data_sharing:
          type: boolean
        analytics:
          type: boolean
        anonymous_mode:
          type: boolean

    UserUpdateRequest:
      type: object
      properties:
        first_name:
          type: string
        preferences:
          $ref: '#/components/schemas/UserPreferences'

    # Cycle Tracking
    CycleLog:
      type: object
      properties:
        id:
          type: string
        user_id:
          type: string
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date
        cycle_length:
          type: integer
        flow_intensity:
          type: integer
          minimum: 1
          maximum: 5
        symptoms:
          $ref: '#/components/schemas/SymptomData'
        notes:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CycleLogRequest:
      type: object
      required:
        - period_start
        - flow_intensity
      properties:
        period_start:
          type: string
          format: date
        period_end:
          type: string
          format: date
        flow_intensity:
          type: integer
          minimum: 1
          maximum: 5
        symptoms:
          $ref: '#/components/schemas/SymptomData'
        notes:
          type: string

    SymptomData:
      type: object
      properties:
        physical:
          type: object
          properties:
            cramps:
              type: integer
              minimum: 1
              maximum: 5
            headache:
              type: integer
              minimum: 1
              maximum: 5
            breast_tenderness:
              type: integer
              minimum: 1
              maximum: 5
            bloating:
              type: integer
              minimum: 1
              maximum: 5
            fatigue:
              type: integer
              minimum: 1
              maximum: 5
        emotional:
          type: object
          properties:
            mood:
              type: integer
              minimum: 1
              maximum: 5
            anxiety:
              type: integer
              minimum: 1
              maximum: 5
            irritability:
              type: integer
              minimum: 1
              maximum: 5
        lifestyle:
          type: object
          properties:
            sleep_hours:
              type: number
              minimum: 0
              maximum: 24
            exercise_minutes:
              type: integer
              minimum: 0
            stress_level:
              type: integer
              minimum: 1
              maximum: 5

    PaginatedCycleLogs:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/CycleLog'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    # Symptom Tracking
    SymptomLogRequest:
      type: object
      required:
        - date
      properties:
        date:
          type: string
          format: date
        symptoms:
          $ref: '#/components/schemas/SymptomData'
        notes:
          type: string

    # Predictions
    CyclePrediction:
      type: object
      properties:
        next_period_start:
          type: string
          format: date
        next_period_end:
          type: string
          format: date
        ovulation_date:
          type: string
          format: date
        fertile_window:
          type: object
          properties:
            start:
              type: string
              format: date
            end:
              type: string
              format: date
        confidence:
          type: number
          minimum: 0
          maximum: 1
        factors:
          type: array
          items:
            type: string

    # Educational Content
    ArticleCategory:
      type: string
      enum:
        - menstrual-hygiene
        - nutrition
        - pcos-disorders
        - fertility-myths
        - mother-daughter
        - general-health

    AgeGroup:
      type: string
      enum:
        - teen
        - adult
        - all

    PaginatedArticles:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Article'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    Article:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        category:
          $ref: '#/components/schemas/ArticleCategory'
        tags:
          type: array
          items:
            type: string
        age_group:
          $ref: '#/components/schemas/AgeGroup'
        language:
          type: string
        read_time:
          type: integer
        created_at:
          type: string
          format: date-time

    # Common
    PaginationInfo:
      type: object
      properties:
        page:
          type: integer
        limit:
          type: integer
        total:
          type: integer
        total_pages:
          type: integer

    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          description: Response data (varies by endpoint)
        error:
          type: string
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key

tags:
  - name: Authentication
    description: User authentication and authorization
  - name: Users
    description: User profile management
  - name: Cycle Tracking
    description: Menstrual cycle logging and history
  - name: Symptom Tracking
    description: Daily symptom logging and analysis
  - name: Predictions
    description: AI-powered cycle and fertility predictions
  - name: Educational Content
    description: Health education articles and resources
